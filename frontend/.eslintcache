[{"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\index.js":"1","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\App.js":"2","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\notes.js":"3","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Set\\set.js":"4","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Dashboard\\dashboard.js":"5","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Sets\\sets.js":"6","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\sidebar\\sidebar.js":"7","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Assignments\\assignments.js":"8","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Courses\\course.js":"9","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\databse.js":"10","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\delete.js":"11","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\add.js":"12","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\body.js":"13","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\header.js":"14","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\addTile.js":"15","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Dashboard\\tiles\\tile.js":"16","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Set\\cardPopUp.js":"17","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\deletePopUp\\deletePopUp.js":"18","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\tag.js":"19","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Sets\\setTile.js":"20","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\sidebar\\item.js":"21","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Assignments\\assFunc.js":"22","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\calFunc.js":"23","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\createPrompt\\createPrompt.js":"24","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\calenderTile\\calenderTile.js":"25","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Courses\\courseTile.js":"26","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\blurredBackground\\blurredBack.js":"27","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Assignments\\assignmentsDB.js":"28","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\courseDB.js":"29"},{"size":174,"mtime":1611199126359,"results":"30","hashOfConfig":"31"},{"size":1114,"mtime":1611288305515,"results":"32","hashOfConfig":"31"},{"size":5901,"mtime":1611199126360,"results":"33","hashOfConfig":"31"},{"size":5590,"mtime":1611199126347,"results":"34","hashOfConfig":"31"},{"size":1512,"mtime":1611284074967,"results":"35","hashOfConfig":"31"},{"size":1786,"mtime":1611199126348,"results":"36","hashOfConfig":"31"},{"size":920,"mtime":1611199126357,"results":"37","hashOfConfig":"31"},{"size":4567,"mtime":1611199126341,"results":"38","hashOfConfig":"31"},{"size":2262,"mtime":1611288186903,"results":"39","hashOfConfig":"31"},{"size":32,"mtime":1611199126358,"results":"40","hashOfConfig":"31"},{"size":331,"mtime":1611199126354,"results":"41","hashOfConfig":"31"},{"size":400,"mtime":1611199126349,"results":"42","hashOfConfig":"31"},{"size":168,"mtime":1611199126352,"results":"43","hashOfConfig":"31"},{"size":247,"mtime":1611199126356,"results":"44","hashOfConfig":"31"},{"size":356,"mtime":1611269647612,"results":"45","hashOfConfig":"31"},{"size":341,"mtime":1611266173140,"results":"46","hashOfConfig":"31"},{"size":1499,"mtime":1611199126346,"results":"47","hashOfConfig":"31"},{"size":832,"mtime":1611199126355,"results":"48","hashOfConfig":"31"},{"size":908,"mtime":1611289284005,"results":"49","hashOfConfig":"31"},{"size":431,"mtime":1611199126348,"results":"50","hashOfConfig":"31"},{"size":375,"mtime":1611199126357,"results":"51","hashOfConfig":"31"},{"size":369,"mtime":1611199126340,"results":"52","hashOfConfig":"31"},{"size":1687,"mtime":1611199126352,"results":"53","hashOfConfig":"31"},{"size":1598,"mtime":1611199126354,"results":"54","hashOfConfig":"31"},{"size":1774,"mtime":1611289086481,"results":"55","hashOfConfig":"31"},{"size":1098,"mtime":1611288021122,"results":"56","hashOfConfig":"31"},{"size":310,"mtime":1611199126350,"results":"57","hashOfConfig":"31"},{"size":1084,"mtime":1611289238217,"results":"58","hashOfConfig":"31"},{"size":538,"mtime":1611267123611,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"14ywyot",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\index.js",[],["124","125"],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\App.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\notes.js",["126"],"import React, { useState, useEffect, useRef } from \"react\"\r\nimport {notes} from './databse.js'\r\nimport {Editor, EditorState, RichUtils, KeyBindingUtil, getDefaultKeyBinding} from 'draft-js';\r\nimport Body from './Shared/body'\r\nimport Header from './Shared/header'\r\nimport './notes.css'\r\n\r\nconst Note = ()=>{\r\n    const [highlight,setHighlight] = useState(false);\r\n    const [color,setColor]=useState(\"#63DD67\");\r\n\r\n    //Declartion for Editor Variables\r\n    const styleMap ={// custom styles for heading and highlight features in notes app\r\n        'HIGHLIGHT':{\r\n            backgroundColor: color\r\n        },\r\n        'HEADING':{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"2em\",\r\n            textDecoration: \"underline\"\r\n        }\r\n    }\r\n    \r\n    const [editorState, setEditorState] = useState(// Basically this encapsulates everything in the text area , the styles , text etc.\r\n        () => EditorState.createEmpty(),\r\n    );\r\n//INTERCHANGEABLE NOTE SECTION\r\n    const [page,setPage]=useState({//tracks the current page , total pages and the type of change that occurs everytime\r\n        currpage:1,\r\n        totalpages:1,\r\n        typeofchange:\"increase\"\r\n    });\r\n    \r\n    // }\r\n    useEffect(()=>{\r\n        if(page.typeofchange===\"increase\")\r\n        {\r\n           setEditorState(page.currpage===page.totalpages&&notes[page.currpage-1]===undefined?EditorState.createEmpty():notes[page.currpage-1]);\r\n           /*if current page equal total pages aka the last page (3/3) , if this page is undefined it creates an empty state else it\r\n            stores whatever is currently in the editor*/\r\n            \r\n        }else if(page.typeofchange===\"decrease\")\r\n        {\r\n            setEditorState(page.currpage===page.totalpages&&notes[page.currpage-1]!==\"\"?EditorState.createEmpty():notes[page.currpage-1]);\r\n             /*if current page equal total pages aka the last page (3/3) , if this page is empty it creates an empty state else it\r\n            stores whatever is currently in the editor*/\r\n        }\r\n        \r\n        \r\n    },[page]);//only occurs when the currpage changes\r\n    useEffect(()=>{\r\n        notes[page.currpage-1]=editorState;\r\n    },[editorState,page.currpage]);//everytime the editor changes the database is updated with the new state\r\n\r\n    const nextPage =()=>{//changes to the next page\r\n        setPage(()=>{\r\n            return({\r\n                currpage:page.currpage+1,//increments to\r\n                totalpages:page.currpage===page.totalpages?page.totalpages+1:page.totalpages,\r\n                typeofchange:\"increase\"\r\n            })\r\n        });\r\n    }\r\n    \r\n    const prevPage = ()=>{\r\n        setPage(()=>{\r\n            return({\r\n                currpage:page.currpage===1?page.currpage:page.currpage-1,\r\n                totalpages:page.totalpages,\r\n                typeofchange:\"decrease\"\r\n            })\r\n        });\r\n    }\r\n    //END OF NOTE\r\n    //START OF EDITOR CODE\r\n    \r\n    const KeyBindingFunct =(e)=>{\r\n\r\n        if (((e.key==='d')||(e.key==='D')) && KeyBindingUtil.hasCommandModifier(e)) {\r\n            return 'HEADING';\r\n        }else if(((e.key==='H')||(e.key==='h')) && KeyBindingUtil.hasCommandModifier(e))\r\n        {\r\n            return 'HIGHLIGHT';\r\n        }\r\n        return getDefaultKeyBinding(e);\r\n\r\n    }\r\n\r\n    const handleKeyCommand =(command)=>{\r\n        if(command === \"HEADING\"){\r\n            const neditorState = RichUtils.toggleInlineStyle(editorState, command);\r\n    \r\n            if (neditorState) {\r\n              setEditorState(neditorState);\r\n\r\n              return 'handled';\r\n            }\r\n\r\n            return 'not-handled';\r\n        }else if(command===\"HIGHLIGHT\"){\r\n            const neditorState = RichUtils.toggleInlineStyle(editorState, command);\r\n    \r\n            if (neditorState) {\r\n              setEditorState(neditorState); \r\n              setHighlight(true);\r\n              return 'handled';\r\n            }\r\n\r\n            return 'not-handled';\r\n        }\r\n    }\r\n\r\n    if(editorState.getSelection().isCollapsed()&&highlight){\r\n        const neditorState = RichUtils.toggleInlineStyle(editorState, \"HIGHLIGHT\");\r\n\r\n        if (neditorState) {\r\n            setEditorState(neditorState);\r\n            setHighlight(false);\r\n            return 'handled';\r\n        }\r\n        return 'not-handled';\r\n\r\n    }\r\n\r\n    //END OF EDITOR CODE\r\n    return (\r\n        <div className='notes'>\r\n            <Body>\r\n                <Header title='Psychology Notes' color='#63DD67' />\r\n                <div className='editorContainer'>\r\n                    <Editor\r\n                        customStyleMap={styleMap} \r\n                        editorState={editorState}\r\n                        onChange={setEditorState}\r\n                        handleKeyCommand={handleKeyCommand}\r\n                        keyBindingFn={KeyBindingFunct}\r\n                    />\r\n                </div>\r\n                <div className='notesControlsContainer'>\r\n                    <div className='notesEffectsContainer'>\r\n                        <button onMouseDown={(e)=>{e.preventDefault(); handleKeyCommand('HEADING');}}>Heading</button>\r\n                        <button onMouseDown={(e)=>{e.preventDefault(); handleKeyCommand(\"HIGHLIGHT\")}}>Highlight</button>\r\n                        <input onChange={(e)=>{ let val=e.target.value; setColor(val)}} type=\"color\" id=\"favcolor\" name=\"favcolor\" value={color}></input>\r\n                    </div>\r\n                    <div className='notesNavContainer'>\r\n                        <i onClick={prevPage} className=\"material-icons md-18\">navigate_before</i>\r\n                        <span className='cardPosition'>{page.currpage}/{page.totalpages}</span>\r\n                        <i onClick={nextPage} className=\"material-icons md-18\">navigate_next</i>\r\n                    </div>\r\n                </div>\r\n            </Body>\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default Note;","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Set\\set.js",["127","128","129"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Header from '../Shared/header'\r\nimport Body from '../Shared/body'\r\nimport AddIcon from '../Shared/add.js'\r\nimport DeleteIcon from '../Shared/delete.js'\r\nimport CardPopUp from './cardPopUp'\r\nimport DeletePopUp from '../Shared/deletePopUp/deletePopUp'\r\nimport './set.css'\r\n\r\nconst Set = () => {\r\n\r\n    let [arr, setArr] = useState([\r\n        {question: 'What is the mitochondria?', ans: ''},\r\n        {question: 'True of False, the Hippocampus is responsible for the body\\'s movement', ans: ''},\r\n        {question: 'Swiggity Swooty, I\\'m coming for that booty?', ans: ''},\r\n        {question: 'What\\'s that, facts? Contract max, I gotta bring this ish back.', ans: ''}\r\n    ])\r\n\r\n    let [index, setIndex] = useState(0)\r\n    let [showCreatePopUp, setShowCreatePopUp] = useState(false)\r\n    let [showDeletePopUp, setShowDeletePopUp] = useState(false)\r\n    let initialRender = useRef(true)\r\n    let justDeleted = useRef(false)\r\n    let deletedLastItem = useRef(false)\r\n    let [currentCard, setCurrentCard] = useState({q: '', a: ''})\r\n    let editClicked = useRef(false)\r\n    let operationMode = useRef('')\r\n\r\n    const nextCard = () => {\r\n        if(index !== (arr.length - 1)){\r\n            setIndex(index + 1)\r\n        }\r\n    }\r\n\r\n    const prevCard = () => {\r\n        if(index !== 0){\r\n            setIndex(index - 1)\r\n        }\r\n    }\r\n\r\n    const listItemClick = (item) => {\r\n        setIndex(arr.indexOf(item))\r\n    }\r\n\r\n    const populateList = (item) => {\r\n        return (\r\n            <div onClick={() => listItemClick(item)}\r\n                style={arr.indexOf(item) === index ? {color: '#63DD67', fontWeight: 400} : {color: '#5D788B', fontWeight: 300}}\r\n                key={arr.indexOf(item)}>\r\n                {item.question.length > 35 ? `${item.question.slice(0, 33)}...` : item.question}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const createPopUp = () => {\r\n        editClicked.current = true\r\n        operationMode.current = 'Create'\r\n        setCurrentCard({q: '', a: ''})\r\n    }\r\n\r\n    const editPopUp = () => {\r\n        editClicked.current = true\r\n        operationMode.current = 'Edit'\r\n        setCurrentCard({q: arr[index].question, a: arr[index].ans})\r\n    }\r\n\r\n    const deletePopUp = () => {\r\n        setShowDeletePopUp(!showDeletePopUp)\r\n    }\r\n\r\n    const addToArr = (q, a) => {\r\n        setArr([...arr, {question: q, ans: a}])\r\n    }\r\n\r\n    const removeFromArr = () => {\r\n        justDeleted.current = true\r\n        if(index === (arr.length - 1)){\r\n            deletedLastItem.current = true\r\n            setIndex(index - 1)\r\n        }else{\r\n            setArr(arr.filter(item => item !== arr[index]))\r\n        }\r\n    }\r\n\r\n    const editItemInArr = (q, a) => {\r\n        setArr(arr.map((item)=>{\r\n            if(item === arr[index]){\r\n                item = {question: q, ans: a}\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(initialRender.current){\r\n            initialRender.current = false\r\n        }else if(justDeleted.current){\r\n            justDeleted.current = false\r\n            setShowDeletePopUp(!showDeletePopUp)\r\n        }else{\r\n            setShowCreatePopUp(!showCreatePopUp)\r\n        }\r\n    }, [arr])\r\n\r\n    useEffect(() => {\r\n        if(!initialRender.current && deletedLastItem.current){\r\n            deletedLastItem.current = false\r\n            setArr(arr.filter(item => item !== arr[index + 1]))\r\n        }\r\n    }, [index])\r\n\r\n    useEffect(() => {\r\n        if(!initialRender.current && editClicked.current){\r\n            editClicked.current = false\r\n            setShowCreatePopUp(!showCreatePopUp)\r\n        }\r\n    }, [currentCard])\r\n\r\n    return(\r\n        <div className='setContainer setViewContainer'>\r\n            {showCreatePopUp ? <CardPopUp operation={operationMode.current} term={currentCard.q} definition={currentCard.a} edit={editItemInArr} create={addToArr} hide={createPopUp} /> : null}\r\n            {showDeletePopUp ? <DeletePopUp remove={removeFromArr} item='card' hide={deletePopUp} /> : null}\r\n            <Body>\r\n                <Header title='Subconsciousness Set' color='#63DD67' />\r\n                <div className='setBackground'>\r\n                    <div className='cardList'>{arr.map(populateList)}</div>\r\n                    <div className='cardContainer'>\r\n                        <div className='card' style={{color: '#63DD67'}}>{arr[index].question}</div>\r\n                        <div className='cardNav'>\r\n                            <i onClick={() => prevCard()} className=\"material-icons md-18\">navigate_before</i>\r\n                            <span className='cardPosition'>{index + 1}/{arr.length}</span>\r\n                            <i onClick={() => nextCard()} className=\"material-icons md-18\">navigate_next</i>\r\n                        </div>\r\n                        <div className='setOptionsContainer'>\r\n                            <div onClick={() => createPopUp()} style={{backgroundColor: '#B2E7FF'}} className='iconHolder'><AddIcon class='setIcon' color='#FFFFFF' /></div>\r\n                            <div onClick={() => editPopUp()} style={{backgroundColor: '#D4FBD6'}} className='iconHolder'><i className=\"material-icons md-18\">edit</i></div>\r\n                            <div onClick={() => deletePopUp()} style={{backgroundColor: '#FFE9E8'}} className='iconHolder'><DeleteIcon class='setIcon' color='#FFFFFF' /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Body>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Set\r\n","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Dashboard\\dashboard.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Sets\\sets.js",["130"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Header from '../Shared/header'\r\nimport Body from '../Shared/body'\r\nimport SetTile from './setTile'\r\nimport AddTile from '../Shared/addTile'\r\nimport CreatePrompt from '../Shared/createPrompt/createPrompt'\r\nimport './sets.css'\r\n\r\nconst Sets = () => {\r\n    let [arr, setArr] = useState([\r\n        {title: 'Neurology', count: 1, color: '#FF746A'},\r\n        {title: 'Dreams State', count: 24, color: '#46B5E8'},\r\n        {title: 'Freud', count: 16, color: '#9A7CE4'},\r\n        {title: 'Subconscious', count: 19, color: '#FFBF58'},\r\n        {title: 'Brain', count: 31, color: '#46B5E8'}\r\n    ])\r\n\r\n    let [showPrompt, setShowPrompt] = useState(false)\r\n    let initialRender = useRef(true)\r\n\r\n    const setFunc = (item) => {\r\n        return (<SetTile key={arr.indexOf(item)} title={item.title} count={item.count} color={item.color} />)\r\n    }\r\n\r\n    const addSet = (t, c, col) => {\r\n        setArr([...arr, {title: t, count: c, color: col}])\r\n    }\r\n\r\n    const createPrompt = () => {\r\n        setShowPrompt(!showPrompt)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(initialRender.current){\r\n            initialRender.current = false\r\n        }else{\r\n            setShowPrompt(!showPrompt)\r\n        }\r\n    }, [arr])\r\n\r\n    return(\r\n        <div className='setContainer'>\r\n            {showPrompt ? <CreatePrompt item='Set' create={addSet} hide={createPrompt} /> : null}\r\n            <Body>\r\n                <Header title='Psychology Sets' color='#FFBF58' />\r\n                <div className='gridContainer setGrid'>\r\n                    {arr.map(setFunc)}\r\n                    <AddTile paddBottom='40%' onClick={createPrompt}></AddTile>\r\n                </div>\r\n            </Body>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sets","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\sidebar\\sidebar.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Assignments\\assignments.js",["131","132"],"import React, { useState } from 'react'\r\nimport './assignments.css'\r\nimport Body from '../Shared/body'\r\nimport Header from '../Shared/header'\r\nimport CalenderTile from '../Shared/calenderTile/calenderTile'\r\nimport CalFunc from '../Shared/calFunc'\r\nimport Assfunc from './assFunc'\r\n\r\nconst Assignments = () => {\r\n    const [mon, setD] = useState({\r\n        dayss: new Date().getMonth(),\r\n        dayofW: new Date().getMonth()\r\n    })\r\n \r\n    const prevMonth = () => {\r\n        setD(() => {\r\n            if(mon.dayss === 0) {\r\n                return ({\r\n                    dayss: mon.dayss - 2,\r\n                    dayofW: mon.dayofW - 1\r\n                })\r\n            }else {\r\n                return ({\r\n                    dayss: mon.dayss - 1,\r\n                    dayofW: mon.dayofW - 1\r\n                })\r\n            }\r\n        })\r\n    }\r\n      \r\n    const nextMonth = () => {\r\n        setD(() => {\r\n            if (mon.dayss === 0) {\r\n                return ({\r\n                    dayss: mon.dayss + 2,\r\n                    dayofW: mon.dayofW + 1\r\n                })\r\n            }else {\r\n                return ({\r\n                    dayss: mon.dayss + 1,\r\n                    dayofW: mon.dayofW + 1\r\n                })\r\n            }\r\n        })\r\n    }\r\n    let dummyAssignments = CalFunc(mon)\r\n    console.log(dummyAssignments)\r\n    \r\n    \r\n    \r\n    \r\n\r\n    const calenderFunc = (item) => {\r\n        return item.map((day)=>{\r\n            let assignments =Assfunc(day,mon.dayofW+1);\r\n            return (<CalenderTile key={Math.random() * Math.random()} assignments={assignments} details={day} usesDay={false} />)\r\n        })\r\n    }\r\n\r\n    const populateList = (itemArr) => {\r\n        if(itemArr.length > 2){\r\n            return (itemArr.map((item)=>{\r\n                if(item.length > 2){\r\n                    let classTheme\r\n                    switch(item.toLowerCase()){\r\n                        case 'quiz':\r\n                            classTheme = 'greenTagTheme'\r\n                            break\r\n                        case 'paper':\r\n                            classTheme = 'blueTagTheme'\r\n                            break\r\n                        case 'project':\r\n                            classTheme = 'orangeTagTheme'\r\n                            break\r\n                        case 'presentation':\r\n                            classTheme = 'purpleTagTheme'\r\n                            break\r\n                        case 'exam':\r\n                            classTheme = 'redTagTheme'\r\n                            break\r\n                        default: \r\n                            classTheme = ''\r\n                            break\r\n                    }\r\n\r\n                    return (\r\n                        <div className='assListItem' key={itemArr.indexOf(item)}>\r\n                            <div className={classTheme + ' colorCodedDot'}></div>\r\n                            {item.length > 35 ? `${item.slice(0, 33)}...` : item}\r\n                        </div>\r\n                    )\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    const dummyPopulate = (item) => {\r\n        return (\r\n            <div className='assListItem' key={Math.random()}>\r\n                <div className={'redTagTheme colorCodedDot'}></div>\r\n                Tomo blc Don\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div className='assignments'>\r\n            <Body>\r\n                <Header title='Psychology Assignments' color='#9A7CE4' />\r\n                <div className='setBackground'>\r\n                    <div className='cardList'>{dummyAssignments.map(dummyPopulate)}</div>\r\n                    <div className='assContainer'>\r\n                        <div className='assGridContainer'>\r\n                            <div className='assGrid'>\r\n                                <div onClick={prevMonth} className='dayHead'>S</div>\r\n                                <div className='dayHead'>M</div>\r\n                                <div className='dayHead'>T</div>\r\n                                <div className='dayHead'>W</div>\r\n                                <div className='dayHead'>T</div>\r\n                                <div className='dayHead'>F</div>\r\n                                <div onClick={nextMonth} className='dayHead'>S</div>\r\n                                {dummyAssignments.map(calenderFunc)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Body>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Assignments","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Courses\\course.js",["133"],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\databse.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\delete.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\add.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\body.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\header.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\addTile.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Dashboard\\tiles\\tile.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Set\\cardPopUp.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\deletePopUp\\deletePopUp.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\tag.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Sets\\setTile.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\sidebar\\item.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Assignments\\assFunc.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\calFunc.js",["134"],"import {useState} from \"react\"\r\nfunction CalFunc(mon) {\r\n    const dates = [\r\n        [],\r\n        [],\r\n        [],\r\n        [],\r\n        [],\r\n        []\r\n    ]\r\n\r\n    let date = new Date();\r\n    let z = 0;\r\n\r\n    const days = function (month, year) { //Gets the num of days in month\r\n        return new Date(year, month, 0).getDate();\r\n    };\r\n\r\n    for (var x = 1; x <= days(mon.dayss, date.getFullYear()); x++) {\r\n\r\n        let dayofW = new Date(date.getFullYear(), mon.dayofW, x).getDay();\r\n        if (x === 1 && dayofW !== 0) {\r\n            let prevMonth = days(mon.dayss === 0 ? mon.dayss - 2 : mon.dayss - 1, date.getFullYear());\r\n            prevMonth = prevMonth - (dayofW);\r\n            for (var i = 0; i < dayofW; i++) {\r\n                prevMonth++;\r\n                dates[z][i] = prevMonth.toString();\r\n            }\r\n        }\r\n\r\n        dates[z][dayofW] = x;\r\n\r\n        if (x === days(mon.dayss, date.getFullYear())) {\r\n            let nxtDays = 1;\r\n            for (var c = dayofW + 1; c < 7; c++) {\r\n\r\n                dates[z][c] = nxtDays.toString();\r\n                nxtDays++;\r\n            }\r\n        }\r\n        if (dayofW === 6) {\r\n            z++;\r\n        }\r\n\r\n    }\r\n    return dates\r\n}\r\nfunction WeekFunc(mon){\r\n    \r\n\r\n    let dates=CalFunc(mon);\r\n    let currDay=new Date().getDate();\r\n    let currweek; //holds index of the week we want\r\n    function Checkweek(day) {\r\n        return day === currDay;\r\n      }\r\n      \r\n    for(var x=0;x<dates.length;x++)\r\n    {\r\n        \r\n        if(dates[x].findIndex(Checkweek)>-1)\r\n        {\r\n            currweek=x;\r\n        }\r\n        \r\n    }\r\n    return dates[currweek];\r\n}\r\n\r\nexport default CalFunc\r\nexport {WeekFunc}","C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\createPrompt\\createPrompt.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\calenderTile\\calenderTile.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Courses\\courseTile.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\blurredBackground\\blurredBack.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Assignments\\assignmentsDB.js",[],"C:\\Users\\comil\\Documents\\ShadowBall\\frontend\\src\\Shared\\courseDB.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":1,"column":38,"nodeType":"141","messageId":"142","endLine":1,"endColumn":44},{"ruleId":"143","severity":1,"message":"144","line":103,"column":8,"nodeType":"145","endLine":103,"endColumn":13,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":110,"column":8,"nodeType":"145","endLine":110,"endColumn":15,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"149","line":117,"column":8,"nodeType":"145","endLine":117,"endColumn":21,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"151","line":39,"column":8,"nodeType":"145","endLine":39,"endColumn":13,"suggestions":"152"},{"ruleId":"139","severity":1,"message":"153","line":60,"column":11,"nodeType":"141","messageId":"142","endLine":60,"endColumn":23},{"ruleId":"154","severity":1,"message":"155","line":62,"column":39,"nodeType":"156","messageId":"157","endLine":62,"endColumn":41},{"ruleId":"139","severity":1,"message":"158","line":13,"column":17,"nodeType":"141","messageId":"142","endLine":13,"endColumn":21},{"ruleId":"139","severity":1,"message":"159","line":1,"column":9,"nodeType":"141","messageId":"142","endLine":1,"endColumn":17},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'showCreatePopUp' and 'showDeletePopUp'. Either include them or remove the dependency array. You can also do a functional update 'setShowDeletePopUp(s => ...)' if you only need 'showDeletePopUp' in the 'setShowDeletePopUp' call.","ArrayExpression",["162"],"React Hook useEffect has a missing dependency: 'arr'. Either include it or remove the dependency array. You can also do a functional update 'setArr(a => ...)' if you only need 'arr' in the 'setArr' call.",["163"],"React Hook useEffect has a missing dependency: 'showCreatePopUp'. Either include it or remove the dependency array. You can also do a functional update 'setShowCreatePopUp(s => ...)' if you only need 'showCreatePopUp' in the 'setShowCreatePopUp' call.",["164"],"React Hook useEffect has a missing dependency: 'showPrompt'. Either include it or remove the dependency array. You can also do a functional update 'setShowPrompt(s => ...)' if you only need 'showPrompt' in the 'setShowPrompt' call.",["165"],"'populateList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setD' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [arr, showCreatePopUp, showDeletePopUp]",{"range":"174","text":"175"},"Update the dependencies array to be: [arr, index]",{"range":"176","text":"177"},"Update the dependencies array to be: [currentCard, showCreatePopUp]",{"range":"178","text":"179"},"Update the dependencies array to be: [arr, showPrompt]",{"range":"180","text":"181"},[3258,3263],"[arr, showCreatePopUp, showDeletePopUp]",[3483,3490],"[arr, index]",[3687,3700],"[currentCard, showCreatePopUp]",[1266,1271],"[arr, showPrompt]"]